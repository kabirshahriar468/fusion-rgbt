# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLOv3-tiiny object detection model with P4/16 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolov3
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
depth_multiple: 1.0 # model depth multiple
width_multiple: 1.0 # layer channel multiple
ch: 4
# YOLOv3-tiny backbone
backbone:
  # [from, number, module, args]
  - [-1, 1, Silence, []]  # 0-P1/2
  - [0, 1, SilenceChannel, [0,3]]  # 1-P1/2
  - [-1, 1, Conv, [16, 3, 1]] # 2
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 3-P1/2
  - [-1, 1, Conv, [32, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 5-P2/4
  - [-1, 1, Conv, [64, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 7-P3/8
  - [-1, 1, Conv, [128, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 9-P4/16
  - [-1, 1, Conv, [256, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 11-P5/32
  - [-1, 1, Conv, [512, 3, 1]]
  - [-1, 1, nn.ZeroPad2d, [[0, 1, 0, 1]]] # 13
  - [-1, 1, nn.MaxPool2d, [2, 1, 0]] # 14


  - [0, 1, SilenceChannel, [3,4]]  # 15-P1/2
  - [-1, 1, Conv, [16, 3, 1]] # 2
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 17-P1/2
  - [-1, 1, Conv, [32, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 19-P2/4
  - [-1, 1, Conv, [64, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 21-P3/8
  - [-1, 1, Conv, [128, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 23-P4/16
  - [-1, 1, Conv, [256, 3, 1]]
  - [-1, 1, nn.MaxPool2d, [2, 2, 0]] # 25-P5/32
  - [-1, 1, Conv, [512, 3, 1]]
  - [-1, 1, nn.ZeroPad2d, [[0, 1, 0, 1]]] # 27
  - [-1, 1, nn.MaxPool2d, [2, 1, 0]] # 28

  - [[10, 24], 1, Concat, [1]]  # cat backbone P4   29
  - [[14, 28], 1, Concat, [1]]  # cat backbone P5   30

# YOLOv3-tiny head
head:
  - [-1, 1, Conv, [1024, 3, 1]]
  - [-1, 1, Conv, [256, 1, 1]]
  - [-1, 1, Conv, [512, 3, 1]] # 33 (P5/32-large)

  - [-2, 1, Conv, [128, 1, 1]]
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 29], 1, Concat, [1]] # cat backbone P4
  - [-1, 1, Conv, [256, 3, 1]] # 37 (P4/16-medium)

  - [[37, 33], 1, Detect, [nc]] # Detect(P4, P5)
